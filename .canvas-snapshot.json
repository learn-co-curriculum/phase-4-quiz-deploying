{
  "quiz": {
    "id": 53512,
    "title": "Deployment Quiz",
    "html_url": "https://learning.flatironschool.com/courses/7560/quizzes/53512",
    "mobile_url": "https://learning.flatironschool.com/courses/7560/quizzes/53512?force_user=1&persist_headless=1",
    "description": "<div id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-4-quiz-deploying\"></div>\n<header class=\"fis-header\">\n  <a class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-4-quiz-deploying/issues/new\" target=\"_blank\"><img id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"></a>\n</header>\n\n<p>It's time to check your knowledge! Use this quiz to create a custom study guide.\nNote any answers that were marked incorrect, so you can study the relevant\nmaterial and try this quiz again.</p>\n\n<p>If you don't know the answer to a question, please do not guess. Instead, select\n\"I don't know\". It's OK not to know everything and to admit when we're unsure.</p>",
    "quiz_type": "assignment",
    "time_limit": null,
    "timer_autosubmit_disabled": false,
    "shuffle_answers": true,
    "show_correct_answers": true,
    "scoring_policy": "keep_highest",
    "allowed_attempts": 3,
    "one_question_at_a_time": true,
    "question_count": 5,
    "points_possible": 5.0,
    "cant_go_back": false,
    "access_code": null,
    "ip_filter": null,
    "due_at": null,
    "lock_at": null,
    "unlock_at": null,
    "published": false,
    "unpublishable": true,
    "locked_for_user": true,
    "lock_info": {
      "missing_permission": "participate_as_student",
      "asset_string": "quizzes:quiz_53512"
    },
    "lock_explanation": "This quiz is currently locked.",
    "hide_results": null,
    "show_correct_answers_at": null,
    "hide_correct_answers_at": null,
    "all_dates": [
      {
        "due_at": null,
        "unlock_at": null,
        "lock_at": null,
        "base": true
      }
    ],
    "can_unpublish": true,
    "can_update": true,
    "require_lockdown_browser": false,
    "require_lockdown_browser_for_results": false,
    "require_lockdown_browser_monitor": false,
    "lockdown_browser_monitor_data": "",
    "speed_grader_url": null,
    "permissions": {
      "manage": true,
      "read": true,
      "create": true,
      "update": true,
      "submit": true,
      "preview": true,
      "delete": true,
      "read_statistics": true,
      "grade": true,
      "review_grades": true,
      "view_answer_audits": true
    },
    "quiz_reports_url": "https://learning.flatironschool.com/api/v1/courses/7560/quizzes/53512/reports",
    "quiz_statistics_url": "https://learning.flatironschool.com/api/v1/courses/7560/quizzes/53512/statistics",
    "message_students_url": "https://learning.flatironschool.com/api/v1/courses/7560/quizzes/53512/submission_users/message",
    "section_count": 1,
    "important_dates": false,
    "quiz_submission_versions_html_url": "https://learning.flatironschool.com/courses/7560/quizzes/53512/submission_versions",
    "assignment_id": 263685,
    "one_time_results": false,
    "only_visible_to_overrides": false,
    "assignment_group_id": 25107,
    "show_correct_answers_last_attempt": true,
    "version_number": 3,
    "has_access_code": false,
    "post_to_sis": false,
    "migration_id": "gde268e7c62407bdb593fe86516f005f0",
    "in_paced_course": false,
    "question_types": [

    ]
  },
  "questions": [
    {
      "id": 366124,
      "quiz_id": 53512,
      "quiz_group_id": null,
      "assessment_question_id": 632215,
      "position": null,
      "question_name": "Environments",
      "question_type": "multiple_answers_question",
      "question_text": "<p>Which of the following are examples of common application environments? Select\nall that apply.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Intro to Deployment",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7560/pages/intro-to-deployment\">Intro to Deployment</a></li></ul><p></p>",
      "answers": [
        {
          "id": 579,
          "text": "",
          "comments": "",
          "comments_html": "<p>Bingo! When your application is deployed to a server, it will be running in\na <strong>production</strong> environment. Some features you have available in the development\nenvironment, like debugging tools and hot-reloading when the code is changed,\naren't available in this environment. Instead, the focuses of a production\nenvironment are to run your application quickly; be resilient to errors (and to\nkeep a log of what goes wrong); to handle lots of traffic; and generally to make\nyour application as great as it can be for your users.</p>",
          "weight": 100.0,
          "html": "<p>Production</p>"
        },
        {
          "id": 9813,
          "text": "",
          "comments": "",
          "comments_html": "<p>Right! When you're working on your application locally, running the code on your\npersonal computer, it's running in the <strong>development</strong> environment. In a\ndevelopment environment, you should be able to easily use debugging tools and\ncode analysis tools (like ESLint, which warns you when you're using React\nincorrectly). You should be able to quickly see the result of adding new code\nand how that affects your application.</p>",
          "weight": 100.0,
          "html": "<p>Development</p>"
        },
        {
          "id": 7229,
          "text": "",
          "comments": "",
          "comments_html": "<p>Correct! When your test runner (like Jest or Pytest) is running, it runs in\na <strong>testing</strong> environment. In this environment, your code should run as quickly\nas possible so that you can get rapid feedback on your application by running\nyour test suite. It should also be as close as possible to your production\nenvironment (though this comes with tradeoffs related to how quickly your tests\ncan run).</p>",
          "weight": 100.0,
          "html": "<p>Testing</p>"
        },
        {
          "id": 7815,
          "text": "",
          "comments": "",
          "comments_html": "",
          "weight": 0.0,
          "html": "<p>Execution</p>"
        },
        {
          "id": 5761,
          "text": "",
          "comments": "",
          "comments_html": "",
          "weight": 0.0,
          "html": "<p>Computation</p>"
        },
        {
          "id": 113,
          "text": "",
          "comments": "",
          "comments_html": "",
          "weight": 0.0,
          "html": "<p>I don't know.</p>"
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366125,
      "quiz_id": 53512,
      "quiz_group_id": null,
      "assessment_question_id": 631545,
      "position": null,
      "question_name": "Environments",
      "question_type": "multiple_answers_question",
      "question_text": "<p>When developing a Flask application, which of the following should be <strong>the\nsame</strong> in your development and production environments?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Intro to Deployment",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7560/pages/intro-to-deployment\">Intro to Deployment</a></li></ul><p></p>",
      "answers": [
        {
          "id": 4277,
          "text": "",
          "comments": "",
          "comments_html": "<p>Correct! You should use the exact same version of Python in development and in\nproduction. Since new Python versions have new features, as well as fixing\nsecurity issues in older versions, it's critical to use the same version in both\nenvironments.</p>",
          "weight": 100.0,
          "html": "<p>Python version</p>"
        },
        {
          "id": 5112,
          "text": "",
          "comments": "",
          "comments_html": "<p>Right! It's generally a best practice to use the same database software locally\nas you use in production, since there are a few key differences between SQL\ndatabase software (like SQLite and PostgreSQL).</p>",
          "weight": 100.0,
          "html": "<p>Database software</p>"
        },
        {
          "id": 3381,
          "text": "",
          "comments": "",
          "comments_html": "<p>It's actually common to deploy your Flask application to a system that runs a\ndifferent OS than you may be using locally. For example, OSX developers can\nstill deploy Flask applications to platforms like Heroku that run Linux without\nissues in most circumstances.</p>",
          "weight": 0.0,
          "html": "<p>Operating system</p>"
        },
        {
          "id": 4199,
          "text": "",
          "comments": "",
          "comments_html": "",
          "weight": 0.0,
          "html": "<p>I don't know.</p>"
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366126,
      "quiz_id": 53512,
      "quiz_group_id": null,
      "assessment_question_id": 631606,
      "position": null,
      "question_name": "Static vs Dynamic Sites",
      "question_type": "true_false_question",
      "question_text": "<p>A <strong>static site</strong> is a site that stores its content in pre-built HTML,\nJavaScript and CSS files.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Intro to Deployment",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7560/pages/intro-to-deployment\">Intro to Deployment</a></li></ul><p></p>",
      "answers": [
        {
          "comments": "",
          "comments_html": "<p>Right! <strong>Dynamic sites</strong> can generate different content based on what resources\nis being requested, whereas <strong>static sites</strong> don't generate custom content and\ninstead serve up pre-built files.</p>",
          "text": "True",
          "weight": 100,
          "id": 5067
        },
        {
          "comments": "",
          "comments_html": "<p><strong>Dynamic sites</strong> can generate different content based on what resource is being requested, whereas <strong>static sites</strong> don't generate custom content and instead serve up pre-built files.</p>",
          "text": "False",
          "weight": 0,
          "id": 3657
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366127,
      "quiz_id": 53512,
      "quiz_group_id": null,
      "assessment_question_id": 631546,
      "position": null,
      "question_name": "Environments",
      "question_type": "true_false_question",
      "question_text": "<p>When you push your application's code to GitHub then deploy it using Render,\nyour database and all its included data is pushed up along with your Flask code.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Deploying a Flask API to Render",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7560/pages/deploying-a-flask-api-to-render\">Deploying a Flask API to Render</a></li></ul><p></p>",
      "answers": [
        {
          "comments": "",
          "comments_html": "<p>Your database files themselves aren't part of your Flask application and are not\ntracked by Git. In order to set up your database on the server, you need to run\nthe commands to migrate and seed the database on Render.</p>",
          "text": "True",
          "weight": 0,
          "id": 5135
        },
        {
          "comments": "",
          "comments_html": "<p>Correct! Your database files themselves aren't part of your Flask application\nand are not tracked by Git. In order to set up your database on the server, you\nneed to run the commands to migrate and seed the database on Render.</p>",
          "text": "False",
          "weight": 100,
          "id": 4708
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "id": 366128,
      "quiz_id": 53512,
      "quiz_group_id": null,
      "assessment_question_id": 631607,
      "position": null,
      "question_name": "Static vs Dynamic Sites",
      "question_type": "true_false_question",
      "question_text": "<p>Front end sites created with Create React App are an example of <strong>static\nsites</strong>.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "Source/s:Intro to DeploymentDeploying a Flask API to Render",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"/courses/7560/pages/intro-to-deployment\">Intro to Deployment</a></li><li><a href=\"/courses/7560/pages/deploying-a-flask-api-to-render\">Deploying a Flask API to Render</a></li></ul><p></p>",
      "answers": [
        {
          "comments": "",
          "comments_html": "<p>Right! Remember, the difference between <strong>static sites</strong> vs <strong>dynamic sites</strong> is\nwhether or not the content is built dynamically for every request to the server.\nSince applications created using Create React App are ultimately just pre-built\nHTML, CSS and JavaScript files, they fit the definition of a <strong>static site</strong>\n(even though they can have a very dynamic user experience).</p>",
          "text": "True",
          "weight": 100,
          "id": 9017
        },
        {
          "comments": "",
          "comments_html": "<p>Remember, the difference between <strong>static sites</strong> vs <strong>dynamic sites</strong> is whether\nor not the content is built dynamically for every request to the server. Since\napplications created using Create React App are ultimately just pre-built HTML,\nCSS and JavaScript files, they fit the definition of a <strong>static site</strong> (even\nthough they can have a very dynamic user experience).</p>",
          "text": "False",
          "weight": 0,
          "id": 8305
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    }
  ]
}